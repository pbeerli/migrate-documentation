%!PS-Adobe-2.0 EPSF-1.2
%%Title: msat.graph.vrt
%%Creator: Altsys Virtuoso 2.0
%%CreationDate: Sat Jun 07 11:39:54 PDT 1997
%%BoundingBox: 1712 2072 2237 2253
%%FHPathName:/Users/peter/Papers/Talks/boulder/originalgraphics/msat.graph.vrt
%ALDOriginalFile:/Users/peter/Papers/Talks/boulder/originalgraphics/msat.graph.vrt
%ALDBoundingBox: -36 -36 4032 4032 
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: font Symbol
%%+ font Helvetica
%%DocumentFonts: Symbol
%%+ Helvetica
%%DocumentNeededFonts: Symbol
%%+ Helvetica
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed {
_NXLevel2 not {
/colorimage where {
userdict eq {
/_rci false def
} if
} if
} if
} if
/md defed{
md type /dicttype eq {
/colorimage where {
md eq {
/_rci false def
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath {
4 -2 roll m
dtransform round exch round exch idtransform
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`
{
false setoverprint
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}
{GrayAngle GrayFrequency}
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div}
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div}
] def
/calcgraysteps {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}
ifelse
}
ifelse
end
}
{
currentscreen pop exch
}
ifelse
printerRes 300 max exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/nextrelease defed {
/languagelevel defed not {
/framebuffer defed {
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps {256 maxsteps min} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def
/delta -0 def
/frac -0 def
/height -0 def
/left -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/width -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat 1 add def
/inverted?
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse 
1 add
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def
{
exch dup
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll
putinterval
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{
dup 
FontDirectory exch 
known
{pop 3 -1 roll pop}
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness dup setflat fps}bdf
end%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh
%%IncludeResource: font Symbol
_efh
0 dict dup begin
end 
/f0 /Symbol FF def
_bfh
%%IncludeResource: font Helvetica
_efh
0 dict dup begin
end 
/f1 /Helvetica FF def
end %. AltsysDict
%%EndSetup
AltsysDict begin
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get0.3 mul
4 index 2 index get0.59 mul
4 index 3 index get0.11 mul
4 index 4 index get
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub
1.0 dup im ik add min sub
1.0 dup iy ik add min sub
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/setspotcolor {
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
/bc4 [0 0 0 0] def
/_lfp4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor
calcgraysteps mul abs round
height abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
currentflat mark
currentflat clipflatness
/delta top bottom sub numsteps1 1 add div def
/right right left sub def
/botsv top delta sub def
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat
/bottom botsv def
0 1 numsteps1
{
numsteps1 div taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def
/_lfs4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/tint2 xdf
/tint1 xdf
bcs exch 1 exch put
tint1 tint2 sub abs
bcs 1 get maxspot
calcgraysteps mul abs round
height abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
currentflat mark
currentflat clipflatness
/delta top bottom sub numsteps1 1 add div def
/right right left sub def
/botsv top delta sub def
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat
/bottom botsv def
0 1 numsteps1
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs4 {
/tint2 xdf
/tint1 xdf
bcs exch 1 exch put
/radius xdf
/yt xdf
/xt xdf
tint1 tint2 sub abs
bcs 1 get maxspot
calcgraysteps mul abs round
radius abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
radius numsteps1 div 2 div /halfstep xdf 
currentflat mark
currentflat clipflatness
{
{
dup setflat
W 
0 1 numsteps1
{
dup /radindex xdf
numsteps1 div /frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat
{
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp4 {
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/radius xdf
/yt xdf
/xt xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor
calcgraysteps mul abs round
radius abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
radius numsteps1 div 2 div /halfstep xdf 
currentflat mark
currentflat clipflatness
{
{
dup setflat
W 
0 1 numsteps1
{
dup /radindex xdf
numsteps1 div /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat
{
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs4{_rfs4}ndf
/rfp4{_rfp4}ndf
/ScitexVignette defed /xt xdf
xt not {/yt save def} if
/anyeq {
cvlit exch
cvlit exch
1 index type /arraytype eq 
2 index type /packedarraytype eq 
or
1 index type /arraytype eq
2 index type /packedarraytype eq
or
and {
1 index length
1 index length eq {
dup length 1 sub -1 0 {
/ind exch def
1 index ind get
1 index ind get
anyeq not {/ind -1 def exit} if
} for
pop pop
ind 0
eq
}{
pop pop false
} ifelse
}{
eq 
} ifelse
} def
/lfp4 where {
pop
/oldlfp /lfp4 load def
/lfp4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/kc2 xdf
/yc2 xdf
/mc2 xdf
/cc2 xdf
/kc1 xdf
/yc1 xdf
/mc1 xdf
/cc1 xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 1 def
/xDimension right left sub abs def
/yDimension top bottom sub abs def
/numOfColorPoints 2 def
/verticalCoord [ top bottom ] def
/horizontalCoord [ left left ] def
/colorArray [
cc1 mc1 yc1 kc1
cc2 mc2 yc2 kc2
] def
/stepVectorFunction /taperfcn load {logtaper} anyeq {[1]}{[0]}ifelse def
/smoothVG [0] def
end
W
xt yt translate ang rotate xt neg yt neg translate
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
cc1 mc1 yc1 kc1 cc2 mc2 yc2 kc2 
/taperfcn load left bottom right top ang xt yt oldlfp
/EndGradation where {pop EndGradation} if
} if
}bdf
} if 
/lfs4 where {
pop
/oldlfs /lfs4 load def
/lfs4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/tint2 xdf
/tint1 xdf
/spotNum xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 1 def
/xDimension right left sub abs def
/yDimension top bottom sub abs def
/numOfColorPoints 2 def
/verticalCoord [ top bottom ] def
/horizontalCoord [ left left ] def
/colorArray [
tint2 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
tint1 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
] def
/stepVectorFunction /taperfcn load {logtaper} anyeq {[1]}{[0]}ifelse def
/smoothVG [0] def
end
W
xt yt translate ang rotate xt neg yt neg translate
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
spotNum tint1 tint2
/taperfcn load left bottom right top ang xt yt oldlfs
/EndGradation where {pop EndGradation} if
} if
}bdf
} if 
/rfp4 where {
pop
/oldrfp /rfp4 load def
/rfp4 {
/kc2 xdf
/yc2 xdf
/mc2 xdf
/cc2 xdf
/kc1 xdf
/yc1 xdf
/mc1 xdf
/cc1 xdf
/radius xdf
/yt xdf
/xt xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 3 def
/xDimension radius 2 mul def
/yDimension radius 2 mul def
/numOfColorPoints 2 def
/verticalCoord [ yt yt ] def
/horizontalCoord [ xt dup radius add ] def
/colorArray [
cc2 mc2 yc2 kc2
cc1 mc1 yc1 kc1
] def
/stepVectorFunction [0] def
/smoothVG [0] def
end
W
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
xt yt radius cc1 mc1 yc1 kc1 cc2 mc2 yc2 kc2 oldrfp
/EndGradation where {pop EndGradation} if
} if
} bdf
} if 
/rfs4 where {
pop
/oldrfs /rfs4 load def
/rfs4 {
/tint2 xdf
/tint1 xdf
/spotNum xdf
/radius xdf
/yt xdf
/xt xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 3 def
/xDimension radius 2 mul def
/yDimension radius 2 mul def
/numOfColorPoints 2 def
/verticalCoord [ yt yt ] def
/horizontalCoord [ xt dup radius add ] def
/colorArray [
tint2 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
tint1 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
] def
/stepVectorFunction [0] def
/smoothVG [0] def
end
W
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
xt yt radius spotNum tint1 tint2 oldrfs
/EndGradation where {pop EndGradation} if
} if
} bdf
} if 
xt not {yt restore} if
/cvc [0 0 0 1] def
/vc{
AltsysDict /cvc 2 index put
aload length 4 eq
{setcmykcolor}
{setspotcolor}
ifelse
}bdf
/origmtx matrix currentmatrix def
/ImMatrix matrix currentmatrix def
0 setseparationgray
/imgr {-36 -36 4032 4032 } def
/bleed 0 def
/clpr {-36 -36 3852 3852 } def
/xs 1 def
/ys 1 def
/botx 0 def
/overlap 0 def
/wdist 18 def
0 2 mul fhsetspreadsize
0 0 ne {/df 0 def /clipflatness 0 def} if
/maxsteps 256 def
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index 
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth vc newpath
/ts{{false charpath stroke}ta}def exec 
xt setlinewidth}bdf
/strk{/textopf currentoverprint def vc setoverprint
/ts{{false charpath stroke}ta}def exec 
textopf setoverprint
}bdf
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
[0.899994 0 0 0.899994 1734.961029 2096.246857] 0 0 282 174 () `
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: NeXT Mathematica Notebook Front End Version 2.2
%%Title: Clipboard
%%CreationDate: Sometime Sometime
%%EndComments
/Mnodistort true def
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
		Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {	% str Mbbox xlow ylow xhigh yhigh
	1 dict begin
	0 0 moveto		% str
	/temp (T) def
	{	gsave
		currentpoint newpath moveto
		temp 0 3 -1 roll put temp
		false charpath flattenpath currentpoint
		pathbbox
		grestore moveto lineto moveto} forall
	pathbbox
	newpath
	end
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
 	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
	0
        matrix defaultmatrix
        dtransform idtransform
	dup mul exch
	dup mul
	add sqrt
} bind def
/Mabswid {	
        Mabsproc
	setlinewidth	
} bind def
/Mabsdash {	
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def


%
% now simple conversion of cmykcolor to rgbcolor
% subtract k and then take complements
/setcmykcolor where
{ pop}
{ /setcmykcolor {	 % c m y k
	4 1
	roll			% k c m y
	[			% k c m y [
	4 1 
	roll			% k [  c m y
	] 			% k [ c m y ]
	{
	1 index		% k elem k
	sub			% k elem-k
	1
	sub neg		% k 1-(elem-k)
	dup
	0
	lt
	{
	pop
	0
	}
	if
	dup
	1
	gt
	{
	pop
	1
	}
	if
	exch		% 1-(elem-k) k
	} forall	% r g b k
	pop
	setrgbcolor
} bind def
} ifelse

/Mcharproc	% max
{
  	currentfile
  	(x)
  	readhexstring
  	pop		% max val
  	0 get
  	exch		% val max
 	div		% nval
} bind def

/Mshadeproc	% max ncols
{
	dup		% max ncols ncols
	3 1
	roll		% ncols max ncols
	{		% ncols max 
	dup		% ncols max max
	Mcharproc		% ncols max val
	3 1
	roll		% v1.. ncols max
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc % x0 x1 y0 y1
{
	3 index         % x0 x1 y0 y1 x0
	2 index         % x0 x1 y0 y1 x0 y0
	moveto          % x0 x1 y0 y1
	2 index         % x0 x1 y0 y1 x1
	3 -1
	roll            % x0 x1 y1 x1 y0
	lineto          % x0 x1 y1
	dup             % x0 x1 y1 y1
	3 1
	roll            % x0 y1 x1 y1
	lineto          % x0 y1
	lineto
	fill
} bind def

/Mcolorimage     % nx ny depth matrix proc bool ncols
{
	7 1
	roll		% ncols nx ny depth matrix proc bool
	pop
	pop
	matrix
	invertmatrix
	concat          % ncols nx ny depth
	2 exch exp      % ncols nx ny 2^depth
	1 sub           % ncols nx ny max
	3 1 roll        % ncols max nx ny
	1 1             % ncols max nx ny 1 1
	2 index         % ncols max nx ny 1 1 ny
	{               % ncols max nx ny iy
	1 1             % ncols max nx ny iy 1 1
	4 index         % ncols max nx ny iy 1 1 nx
	{               % ncols max nx ny iy ix
	dup             % ncols max nx ny iy ix ix
	1 sub           % ncols max nx ny iy ix x0
	exch            % ncols max nx ny iy x0 x1
	2 index         % ncols max nx ny iy x0 x1 iy
	dup             % ncols max nx ny iy x0 x1 iy iy
	1 sub           % ncols max nx ny iy x0 x1 iy y0
	exch            % ncols max nx ny iy x0 x1 y0 y1
	7 index         % ncols max nx ny iy x0 x1 y0 y1 max
	9 index		% ncols max nx ny iy x0 x1 y0 y1 max ncols
	Mshadeproc	% ncols max nx ny iy x0 x1 y0 y1
	Mrectproc        % max nx ny iy
	} for           % x loop
	pop             % max nx ny
	} for           % y loop
	pop pop pop pop
} bind def

/Mimage  % nx ny depth matrix proc
{
	pop
	matrix
	invertmatrix
	concat          % nx ny depth
	2 exch exp      % nx ny 2^depth
	1 sub           % nx ny max
	3 1 roll        % max nx ny
	1 1             % max nx ny 1 1
	2 index         % max nx ny 1 1 ny
	{               % max nx ny iy
	1 1             % max nx ny iy 1 1
	4 index         % max nx ny iy 1 1 nx
	{               % max nx ny iy ix
	dup             % max nx ny iy ix ix
	1 sub           % max nx ny iy ix x0
	exch            % max nx ny iy x0 x1
	2 index         % max nx ny iy x0 x1 iy
	dup             % max nx ny iy x0 x1 iy iy
	1 sub           % max nx ny iy x0 x1 iy y0
	exch            % max nx ny iy x0 x1 y0 y1
	7 index         % max nx ny iy x0 x1 y0 y1 max
	Mcharproc	% max nx ny iy x0 x1 y0 y1 val
	setgray         % max nx ny iy x0 x1 y0 y1
	Mrectproc        % max nx ny iy
	} for           % x loop
	pop             % max nx ny
	} for           % y loop
	pop pop pop
} bind def


%MFill fills the drawing area with the current color.
/MFill {
	-1 -1 		moveto
	Mwidth 1 add -1 	lineto
	Mwidth 1 add Mheight 1 add 	lineto
	-1 Mheight 1 add 	lineto
	fill
} bind def

% xmin xmax ymin ymax MPlotRegion alters the origin, Mwidth and Mheight 
% so that the picture fills the altered region
/MPlotRegion {		% xmin xmax ymin ymax MPlotRegion
	3 index		% xmin xmax ymin ymax xmin
	Mwidth mul	% xmin xmax ymin ymax xmin_pos
	2 index		% xmin xmax ymin ymax xmin_pos ymin
	Mheight mul	% xmin xmax ymin ymax xmin_pos ymin_pos
	translate	% xmin xmax ymin ymax
	exch sub	% xmin xmax ymax-ymin
	Mheight mul	% xmin xmax new_height
	/Mheight
	exch def	% xmin xmax
	exch sub	% xmax-xmin
	Mwidth mul	% new-width
	/Mwidth
	exch def
} bind def
/colorimage {Mcolorimage} bind def
/image {Mimage} bind def
/Mleft		1.000000 def
/Mbottom	173.284454 def
/Mwidth		280.000000 def
/Mheight	172.284454 def
/Courier findfont 12 scalefont setfont
/Mfontsize 10 def
/Plain /Courier findfont def
/Courier findfont 10 scalefont setfont
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Helvetica findfont 14  scalefont  setfont
% Scaling calculations
-0.003663 0.045788 0.014715 1.26375 [
[(-6)] .22527 .01472 0 2 Msboxa
[(-3)] .36264 .01472 0 2 Msboxa
[(0)] .5 .01472 0 2 Msboxa
[(+3)] .63736 .01472 0 2 Msboxa
[(+6)] .77473 .01472 0 2 Msboxa
[(0.1)] .00215 .14109 1 0 Msboxa
[(0.2)] .00215 .26747 1 0 Msboxa
[(0.3)] .00215 .39384 1 0 Msboxa
[(0.4)] .00215 .52022 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.04212 .01472 m
.04212 .02097 L
s
P
p
.002 w
.08791 .01472 m
.08791 .02097 L
s
P
p
.002 w
.1337 .01472 m
.1337 .02097 L
s
P
p
.002 w
.17949 .01472 m
.17949 .02097 L
s
P
p
.002 w
.22527 .01472 m
.22527 .02097 L
s
P
[(-6)] .22527 .01472 0 2 Mshowa
p
.002 w
.27106 .01472 m
.27106 .02097 L
s
P
p
.002 w
.31685 .01472 m
.31685 .02097 L
s
P
p
.002 w
.36264 .01472 m
.36264 .02097 L
s
P
[(-3)] .36264 .01472 0 2 Mshowa
p
.002 w
.40842 .01472 m
.40842 .02097 L
s
P
p
.002 w
.45421 .01472 m
.45421 .02097 L
s
P
p
.002 w
.5 .01472 m
.5 .02097 L
s
P
[(0)] .5 .01472 0 2 Mshowa
p
.002 w
.54579 .01472 m
.54579 .02097 L
s
P
p
.002 w
.59158 .01472 m
.59158 .02097 L
s
P
p
.002 w
.63736 .01472 m
.63736 .02097 L
s
P
[(+3)] .63736 .01472 0 2 Mshowa
p
.002 w
.68315 .01472 m
.68315 .02097 L
s
P
p
.002 w
.72894 .01472 m
.72894 .02097 L
s
P
p
.002 w
.77473 .01472 m
.77473 .02097 L
s
P
[(+6)] .77473 .01472 0 2 Mshowa
p
.002 w
.82051 .01472 m
.82051 .02097 L
s
P
p
.002 w
.8663 .01472 m
.8663 .02097 L
s
P
p
.002 w
.91209 .01472 m
.91209 .02097 L
s
P
p
.002 w
.95788 .01472 m
.95788 .02097 L
s
P
p
.002 w
0 .01472 m
1 .01472 L
s
P
p
.002 w
.01465 .14109 m
.0209 .14109 L
s
P
[(0.1)] .00215 .14109 1 0 Mshowa
p
.002 w
.01465 .26747 m
.0209 .26747 L
s
P
[(0.2)] .00215 .26747 1 0 Mshowa
p
.002 w
.01465 .39384 m
.0209 .39384 L
s
P
[(0.3)] .00215 .39384 1 0 Mshowa
p
.002 w
.01465 .52022 m
.0209 .52022 L
s
P
[(0.4)] .00215 .52022 1 0 Mshowa
p
.001 w
.01465 .03999 m
.0184 .03999 L
s
P
p
.001 w
.01465 .06527 m
.0184 .06527 L
s
P
p
.001 w
.01465 .09054 m
.0184 .09054 L
s
P
p
.001 w
.01465 .11582 m
.0184 .11582 L
s
P
p
.001 w
.01465 .16637 m
.0184 .16637 L
s
P
p
.001 w
.01465 .19164 m
.0184 .19164 L
s
P
p
.001 w
.01465 .21692 m
.0184 .21692 L
s
P
p
.001 w
.01465 .24219 m
.0184 .24219 L
s
P
p
.001 w
.01465 .29274 m
.0184 .29274 L
s
P
p
.001 w
.01465 .31802 m
.0184 .31802 L
s
P
p
.001 w
.01465 .34329 m
.0184 .34329 L
s
P
p
.001 w
.01465 .36857 m
.0184 .36857 L
s
P
p
.001 w
.01465 .41912 m
.0184 .41912 L
s
P
p
.001 w
.01465 .44439 m
.0184 .44439 L
s
P
p
.001 w
.01465 .46967 m
.0184 .46967 L
s
P
p
.001 w
.01465 .49494 m
.0184 .49494 L
s
P
p
.001 w
.01465 .54549 m
.0184 .54549 L
s
P
p
.001 w
.01465 .57077 m
.0184 .57077 L
s
P
p
.001 w
.01465 .59604 m
.0184 .59604 L
s
P
p
.002 w
.01465 0 m
.01465 .61803 L
s
P
P
p
p
p
0 .098 1 r
.02381 .01472 m
.02381 .01472 L
.06044 .01472 L
.06044 .01472 L
F
P
p
.004 w
.02381 .01472 m
.02381 .01472 L
.06044 .01472 L
.06044 .01472 L
.02381 .01472 L
s
P
P
p
p
0 .098 1 r
.0696 .01472 m
.0696 .01472 L
.10623 .01472 L
.10623 .01472 L
F
P
p
.004 w
.0696 .01472 m
.0696 .01472 L
.10623 .01472 L
.10623 .01472 L
.0696 .01472 L
s
P
P
p
p
0 .098 1 r
.11538 .01472 m
.11538 .01472 L
.15201 .01472 L
.15201 .01472 L
F
P
p
.004 w
.11538 .01472 m
.11538 .01472 L
.15201 .01472 L
.15201 .01472 L
.11538 .01472 L
s
P
P
p
p
0 .098 1 r
.16117 .01472 m
.16117 .01472 L
.1978 .01472 L
.1978 .01472 L
F
P
p
.004 w
.16117 .01472 m
.16117 .01472 L
.1978 .01472 L
.1978 .01472 L
.16117 .01472 L
s
P
P
p
p
0 .098 1 r
.20696 .01472 m
.20696 .01473 L
.24359 .01473 L
.24359 .01472 L
F
P
p
.004 w
.20696 .01472 m
.20696 .01473 L
.24359 .01473 L
.24359 .01472 L
.20696 .01472 L
s
P
P
p
p
0 .098 1 r
.25275 .01472 m
.25275 .01484 L
.28938 .01484 L
.28938 .01472 L
F
P
p
.004 w
.25275 .01472 m
.25275 .01484 L
.28938 .01484 L
.28938 .01472 L
.25275 .01472 L
s
P
P
p
p
0 .098 1 r
.29853 .01472 m
.29853 .01599 L
.33516 .01599 L
.33516 .01472 L
F
P
p
.004 w
.29853 .01472 m
.29853 .01599 L
.33516 .01599 L
.33516 .01472 L
.29853 .01472 L
s
P
P
p
p
0 .098 1 r
.34432 .01472 m
.34432 .02502 L
.38095 .02502 L
.38095 .01472 L
F
P
p
.004 w
.34432 .01472 m
.34432 .02502 L
.38095 .02502 L
.38095 .01472 L
.34432 .01472 L
s
P
P
p
p
0 .098 1 r
.39011 .01472 m
.39011 .07783 L
.42674 .07783 L
.42674 .01472 L
F
P
p
.004 w
.39011 .01472 m
.39011 .07783 L
.42674 .07783 L
.42674 .01472 L
.39011 .01472 L
s
P
P
p
p
0 .098 1 r
.4359 .01472 m
.4359 .27746 L
.47253 .27746 L
.47253 .01472 L
F
P
p
.004 w
.4359 .01472 m
.4359 .27746 L
.47253 .27746 L
.47253 .01472 L
.4359 .01472 L
s
P
P
p
p
0 .098 1 r
.48168 .01472 m
.48168 .60332 L
.51832 .60332 L
.51832 .01472 L
F
P
p
.004 w
.48168 .01472 m
.48168 .60332 L
.51832 .60332 L
.51832 .01472 L
.48168 .01472 L
s
P
P
p
p
0 .098 1 r
.52747 .01472 m
.52747 .27746 L
.5641 .27746 L
.5641 .01472 L
F
P
p
.004 w
.52747 .01472 m
.52747 .27746 L
.5641 .27746 L
.5641 .01472 L
.52747 .01472 L
s
P
P
p
p
0 .098 1 r
.57326 .01472 m
.57326 .07783 L
.60989 .07783 L
.60989 .01472 L
F
P
p
.004 w
.57326 .01472 m
.57326 .07783 L
.60989 .07783 L
.60989 .01472 L
.57326 .01472 L
s
P
P
p
p
0 .098 1 r
.61905 .01472 m
.61905 .02502 L
.65568 .02502 L
.65568 .01472 L
F
P
p
.004 w
.61905 .01472 m
.61905 .02502 L
.65568 .02502 L
.65568 .01472 L
.61905 .01472 L
s
P
P
p
p
0 .098 1 r
.66484 .01472 m
.66484 .01599 L
.70147 .01599 L
.70147 .01472 L
F
P
p
.004 w
.66484 .01472 m
.66484 .01599 L
.70147 .01599 L
.70147 .01472 L
.66484 .01472 L
s
P
P
p
p
0 .098 1 r
.71062 .01472 m
.71062 .01484 L
.74725 .01484 L
.74725 .01472 L
F
P
p
.004 w
.71062 .01472 m
.71062 .01484 L
.74725 .01484 L
.74725 .01472 L
.71062 .01472 L
s
P
P
p
p
0 .098 1 r
.75641 .01472 m
.75641 .01473 L
.79304 .01473 L
.79304 .01472 L
F
P
p
.004 w
.75641 .01472 m
.75641 .01473 L
.79304 .01473 L
.79304 .01472 L
.75641 .01472 L
s
P
P
p
p
0 .098 1 r
.8022 .01472 m
.8022 .01472 L
.83883 .01472 L
.83883 .01472 L
F
P
p
.004 w
.8022 .01472 m
.8022 .01472 L
.83883 .01472 L
.83883 .01472 L
.8022 .01472 L
s
P
P
p
p
0 .098 1 r
.84799 .01472 m
.84799 .01472 L
.88462 .01472 L
.88462 .01472 L
F
P
p
.004 w
.84799 .01472 m
.84799 .01472 L
.88462 .01472 L
.88462 .01472 L
.84799 .01472 L
s
P
P
p
p
0 .098 1 r
.89377 .01472 m
.89377 .01472 L
.9304 .01472 L
.9304 .01472 L
F
P
p
.004 w
.89377 .01472 m
.89377 .01472 L
.9304 .01472 L
.9304 .01472 L
.89377 .01472 L
s
P
P
p
p
0 .098 1 r
.93956 .01472 m
.93956 .01472 L
.97619 .01472 L
.97619 .01472 L
F
P
p
.004 w
.93956 .01472 m
.93956 .01472 L
.97619 .01472 L
.97619 .01472 L
.93956 .01472 L
s
P
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
%%PSTrailer
end

%%EPS Trailer

%%EndDocument
end -save0- restore 
2061.7387 2112.943 m
2061.7387 2114.3242 L
1.7999 w
3.899994 M
S
n
2065.3975 2108.4438 m
2058.1975 2108.4438 L
2058.1975 2096.3959 L
2065.3975 2096.3959 L
2065.3975 2108.4438 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2058.197495 2099.827805 m
0 0 32 0 0 (1) ts
}
false
[0 0 0 1]sts
Q
2103.8382 2112.943 m
2103.8382 2114.3242 L
false setoverprint
S
n
2107.497 2108.4438 m
2100.297 2108.4438 L
2100.297 2096.3959 L
2107.497 2096.3959 L
2107.497 2108.4438 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2100.296997 2099.827805 m
0 0 32 0 0 (2) ts
}
false
[0 0 0 1]sts
Q
2145.9389 2112.943 m
2145.9389 2114.3242 L
false setoverprint
S
n
2149.5977 2108.4438 m
2142.3977 2108.4438 L
2142.3977 2096.3959 L
2149.5977 2096.3959 L
2149.5977 2108.4438 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2142.39769 2099.827805 m
0 0 32 0 0 (3) ts
}
false
[0 0 0 1]sts
Q
2188.0372 2112.943 m
2188.0372 2114.3242 L
false setoverprint
S
n
2191.696 2108.4438 m
2184.496 2108.4438 L
2184.496 2096.3959 L
2191.696 2096.3959 L
2191.696 2108.4438 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2184.495987 2099.827805 m
0 0 32 0 0 (4) ts
}
false
[0 0 0 1]sts
Q
2230.1379 2112.943 m
2230.1379 2114.3242 L
false setoverprint
S
n
2233.7967 2108.4438 m
2226.5967 2108.4438 L
2226.5967 2096.3959 L
2233.7967 2096.3959 L
2233.7967 2108.4438 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2226.59668 2099.827805 m
0 0 32 0 0 (5) ts
}
false
[0 0 0 1]sts
Q
2028.0572 2112.943 m
2028.0572 2113.7722 L
false setoverprint
S
n
2036.4788 2112.943 m
2036.4788 2113.7722 L
S
n
2044.8991 2112.943 m
2044.8991 2113.7722 L
S
n
2053.3183 2112.943 m
2053.3183 2113.7722 L
S
n
2070.1579 2112.943 m
2070.1579 2113.7722 L
S
n
2078.5795 2112.943 m
2078.5795 2113.7722 L
S
n
2086.9974 2112.943 m
2086.9974 2113.7722 L
S
n
2095.419 2112.943 m
2095.419 2113.7722 L
S
n
2112.2586 2112.943 m
2112.2586 2113.7722 L
S
n
vmrs
2120.6777 2112.943 m
2120.6777 2113.7722 L
1.7999 w
3.899994 M
S
n
2129.0993 2112.943 m
2129.0993 2113.7722 L
S
n
2137.5173 2112.943 m
2137.5173 2113.7722 L
S
n
2154.3581 2112.943 m
2154.3581 2113.7722 L
S
n
2162.7784 2112.943 m
2162.7784 2113.7722 L
S
n
2171.1976 2112.943 m
2171.1976 2113.7722 L
S
n
2179.618 2112.943 m
2179.618 2113.7722 L
S
n
2196.4588 2112.943 m
2196.4588 2113.7722 L
S
n
2204.8779 2112.943 m
2204.8779 2113.7722 L
S
n
2213.2983 2112.943 m
2213.2983 2113.7722 L
S
n
2221.7199 2112.943 m
2221.7199 2113.7722 L
S
n
2014.376 2112.943 m
2235.401 2112.943 L
S
n
2019.638 2138.9625 m
2021.0192 2138.9625 L
S
n
2017.226 2142.7961 m
1995.6261 2142.7961 L
1995.6261 2130.7482 L
2017.226 2130.7482 L
2017.226 2142.7961 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1995.626068 2134.180115 m
0 0 32 0 0 (0.2) ts
}
false
[0 0 0 1]sts
Q
2019.638 2164.9809 m
2021.0192 2164.9809 L
false setoverprint
S
n
2017.226 2168.8145 m
1995.6261 2168.8145 L
1995.6261 2156.7665 L
2017.226 2156.7665 L
2017.226 2168.8145 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1995.626068 2160.198441 m
0 0 32 0 0 (0.4) ts
}
false
[0 0 0 1]sts
Q
2019.638 2191.0004 m
2021.0192 2191.0004 L
false setoverprint
S
n
2017.226 2194.834 m
1995.6261 2194.834 L
1995.6261 2182.7861 L
2017.226 2182.7861 L
2017.226 2194.834 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1995.626068 2186.217972 m
0 0 32 0 0 (0.6) ts
}
false
[0 0 0 1]sts
Q
2019.638 2217.0187 m
2021.0192 2217.0187 L
false setoverprint
S
n
2017.226 2220.8523 m
1995.6261 2220.8523 L
1995.6261 2208.8044 L
2017.226 2208.8044 L
2017.226 2220.8523 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1995.626068 2212.236313 m
0 0 32 0 0 (0.8) ts
}
false
[0 0 0 1]sts
Q
vmrs
2019.638 2243.0383 m
2021.0192 2243.0383 L
1.7999 w
3.899994 M
S
n
2019.638 2118.1462 m
2020.4672 2118.1462 L
S
n
2019.638 2123.3494 m
2020.4672 2123.3494 L
S
n
2019.638 2128.5538 m
2020.4672 2128.5538 L
S
n
2019.638 2133.7569 m
2020.4672 2133.7569 L
S
n
2019.638 2144.1645 m
2020.4672 2144.1645 L
S
n
2019.638 2149.3677 m
2020.4672 2149.3677 L
S
n
2019.638 2154.5733 m
2020.4672 2154.5733 L
S
n
2019.638 2159.7765 m
2020.4672 2159.7765 L
S
n
2019.638 2170.1841 m
2020.4672 2170.1841 L
S
n
2019.638 2175.3872 m
2020.4672 2175.3872 L
S
n
2019.638 2180.5916 m
2020.4672 2180.5916 L
S
n
2019.638 2185.7948 m
2020.4672 2185.7948 L
S
n
2019.638 2196.2036 m
2020.4672 2196.2036 L
S
n
2019.638 2201.408 m
2020.4672 2201.408 L
S
n
2019.638 2206.6112 m
2020.4672 2206.6112 L
S
n
2019.638 2211.8143 m
2020.4672 2211.8143 L
S
n
2019.638 2222.2219 m
2020.4672 2222.2219 L
S
n
2019.638 2227.4275 m
2020.4672 2227.4275 L
S
n
2019.638 2232.6307 m
2020.4672 2232.6307 L
S
n
vmrs
2019.638 2237.8327 m
2020.4672 2237.8327 L
1.7999 w
3.899994 M
S
n
2019.638 2109.6898 m
2019.638 2246.2891 L
S
n
2019.638 2243.0383 m
2023.8488 2230.9531 L
S
n
2023.8488 2230.9531 m
2028.0572 2220.5227 L
S
n
2028.0572 2220.5227 m
2032.268 2211.5 L
S
n
2032.268 2211.5 m
2036.4788 2203.6712 L
S
n
2036.4788 2203.6712 m
2040.6883 2196.86 L
S
n
2040.6883 2196.86 m
2044.8991 2190.9116 L
S
n
2044.8991 2190.9116 m
2049.1075 2185.7048 L
S
n
2049.1075 2185.7048 m
2053.3183 2181.1316 L
S
n
2053.3183 2181.1316 m
2057.5291 2177.0996 L
S
n
2057.5291 2177.0996 m
2061.7387 2173.5345 L
S
n
2061.7387 2173.5345 m
2065.9471 2170.3725 L
S
n
2065.9471 2170.3725 m
2070.1579 2167.5537 L
S
n
2070.1579 2167.5537 m
2074.3687 2165.0361 L
S
n
2074.3687 2165.0361 m
2078.5795 2162.7777 L
S
n
2078.5795 2162.7777 m
2082.7878 2160.7437 L
S
n
2082.7878 2160.7437 m
2086.9974 2158.9077 L
S
n
2086.9974 2158.9077 m
2091.2082 2157.2409 L
S
n
2091.2082 2157.2409 m
2095.419 2155.7265 L
S
n
vmrs
2095.419 2155.7265 m
2099.6274 2154.3429 L
1.7999 w
3.899994 M
S
n
2099.6274 2154.3429 m
2103.8382 2153.0769 L
S
n
2103.8382 2153.0769 m
2108.049 2151.9141 L
S
n
2108.049 2151.9141 m
2112.2586 2150.8425 L
S
n
2112.2586 2150.8425 m
2116.4669 2149.8501 L
S
n
2116.4669 2149.8501 m
2120.6777 2148.9297 L
S
n
2120.6777 2148.9297 m
2124.8885 2148.0753 L
S
n
2124.8885 2148.0753 m
2129.0993 2147.2773 L
S
n
2129.0993 2147.2773 m
2133.3089 2146.5297 L
S
n
2133.3089 2146.5297 m
2137.5173 2145.8313 L
S
n
2137.5173 2145.8313 m
2141.7281 2145.1749 L
S
n
2141.7281 2145.1749 m
2145.9389 2144.5557 L
S
n
2145.9389 2144.5557 m
2150.1497 2143.9701 L
S
n
2150.1497 2143.9701 m
2154.3581 2143.4205 L
S
n
2154.3581 2143.4205 m
2158.5676 2142.8961 L
S
n
2158.5676 2142.8961 m
2162.7784 2142.3993 L
S
n
2162.7784 2142.3993 m
2166.9892 2141.9277 L
S
n
2166.9892 2141.9277 m
2171.1976 2141.4777 L
S
n
2171.1976 2141.4777 m
2175.4084 2141.0481 L
S
n
2175.4084 2141.0481 m
2179.618 2140.6401 L
S
n
vmrs
2179.618 2140.6401 m
2183.8288 2140.2489 L
1.7999 w
3.899994 M
S
n
2183.8288 2140.2489 m
2188.0372 2139.8721 L
S
n
2188.0372 2139.8721 m
2192.248 2139.5121 L
S
n
2192.248 2139.5121 m
2196.4588 2139.1653 L
S
n
2196.4588 2139.1653 m
2200.6695 2138.8341 L
S
n
2200.6695 2138.8341 m
2204.8779 2138.5137 L
S
n
2204.8779 2138.5137 m
2209.0875 2138.2065 L
S
n
2209.0875 2138.2065 m
2213.2983 2137.9101 L
S
n
2213.2983 2137.9101 m
2217.5091 2137.6221 L
S
n
2217.5091 2137.6221 m
2221.7199 2137.3461 L
S
n
2221.7199 2137.3461 m
2225.9283 2137.0785 L
S
n
2225.9283 2137.0785 m
2230.1379 2136.8205 L
S
n
2019.638 2112.943 m
2023.8488 2118.835 L
S
n
2023.8488 2118.835 m
2028.0572 2123.647 L
S
n
2028.0572 2123.647 m
2032.268 2127.5614 L
S
n
2032.268 2127.5614 m
2036.4788 2130.733 L
S
n
2036.4788 2130.733 m
2040.6883 2133.2901 L
S
n
2040.6883 2133.2901 m
2044.8991 2135.3397 L
S
n
2044.8991 2135.3397 m
2049.1075 2136.9657 L
S
n
2049.1075 2136.9657 m
2053.3183 2138.2461 L
S
n
vmrs
2053.3183 2138.2461 m
2057.5291 2139.2361 L
1.7999 w
3.899994 M
S
n
2057.5291 2139.2361 m
2061.7387 2139.9897 L
S
n
2061.7387 2139.9897 m
2065.9471 2140.5489 L
S
n
2065.9471 2140.5489 m
2070.1579 2140.9473 L
S
n
2070.1579 2140.9473 m
2074.3687 2141.2125 L
S
n
2074.3687 2141.2125 m
2078.5795 2141.3685 L
S
n
2078.5795 2141.3685 m
2082.7878 2141.4369 L
S
n
2082.7878 2141.4369 m
2086.9974 2141.4357 L
S
n
2086.9974 2141.4357 m
2091.2082 2141.3757 L
S
n
2091.2082 2141.3757 m
2095.419 2141.2677 L
S
n
2095.419 2141.2677 m
2099.6274 2141.1213 L
S
n
2099.6274 2141.1213 m
2103.8382 2140.9473 L
S
n
2103.8382 2140.9473 m
2108.049 2140.7505 L
S
n
2108.049 2140.7505 m
2112.2586 2140.5333 L
S
n
2112.2586 2140.5333 m
2116.4669 2140.3041 L
S
n
2116.4669 2140.3041 m
2120.6777 2140.0653 L
S
n
2120.6777 2140.0653 m
2124.8885 2139.8169 L
S
n
2124.8885 2139.8169 m
2129.0993 2139.5649 L
S
n
2129.0993 2139.5649 m
2133.3089 2139.3117 L
S
n
2133.3089 2139.3117 m
2137.5173 2139.0573 L
S
n
vmrs
2137.5173 2139.0573 m
2141.7281 2138.8029 L
1.7999 w
3.899994 M
S
n
2141.7281 2138.8029 m
2145.9389 2138.5485 L
S
n
2145.9389 2138.5485 m
2150.1497 2138.2965 L
S
n
2150.1497 2138.2965 m
2154.3581 2138.047 L
S
n
2154.3581 2138.047 m
2158.5676 2137.8021 L
S
n
2158.5676 2137.8021 m
2162.7784 2137.5609 L
S
n
2162.7784 2137.5609 m
2166.9892 2137.3221 L
S
n
2166.9892 2137.3221 m
2171.1976 2137.0881 L
S
n
2171.1976 2137.0881 m
2175.4084 2136.8578 L
S
n
2175.4084 2136.8578 m
2179.618 2136.6321 L
S
n
2179.618 2136.6321 m
2183.8288 2136.4137 L
S
n
2183.8288 2136.4137 m
2188.0372 2136.1965 L
S
n
2188.0372 2136.1965 m
2192.248 2135.9854 L
S
n
2192.248 2135.9854 m
2196.4588 2135.7766 L
S
n
2196.4588 2135.7766 m
2200.6695 2135.5761 L
S
n
2200.6695 2135.5761 m
2204.8779 2135.377 L
S
n
2204.8779 2135.377 m
2209.0875 2135.1825 L
S
n
2209.0875 2135.1825 m
2213.2983 2134.993 L
S
n
2213.2983 2134.993 m
2217.5091 2134.8069 L
S
n
2217.5091 2134.8069 m
2221.7199 2134.6258 L
S
n
vmrs
2221.7199 2134.6258 m
2225.9283 2134.4482 L
1.7999 w
3.899994 M
S
n
2225.9283 2134.4482 m
2230.1379 2134.2742 L
S
n
2019.638 2112.943 m
2023.8488 2113.0882 L
S
n
2023.8488 2113.0882 m
2028.0572 2113.4758 L
S
n
2028.0572 2113.4758 m
2032.268 2114.035 L
S
n
2032.268 2114.035 m
2036.4788 2114.7094 L
S
n
2036.4788 2114.7094 m
2040.6883 2115.4606 L
S
n
2040.6883 2115.4606 m
2044.8991 2116.2514 L
S
n
2044.8991 2116.2514 m
2049.1075 2117.0626 L
S
n
2049.1075 2117.0626 m
2053.3183 2117.8714 L
S
n
2053.3183 2117.8714 m
2057.5291 2118.667 L
S
n
2057.5291 2118.667 m
2061.7387 2119.4386 L
S
n
2061.7387 2119.4386 m
2065.9471 2120.1766 L
S
n
2065.9471 2120.1766 m
2070.1579 2120.8798 L
S
n
2070.1579 2120.8798 m
2074.3687 2121.5434 L
S
n
2074.3687 2121.5434 m
2078.5795 2122.1662 L
S
n
2078.5795 2122.1662 m
2082.7878 2122.7482 L
S
n
2082.7878 2122.7482 m
2086.9974 2123.2894 L
S
n
2086.9974 2123.2894 m
2091.2082 2123.791 L
S
n
2091.2082 2123.791 m
2095.419 2124.2554 L
S
n
vmrs
2095.419 2124.2554 m
2099.6274 2124.6814 L
1.7999 w
3.899994 M
S
n
2099.6274 2124.6814 m
2103.8382 2125.0726 L
S
n
2103.8382 2125.0726 m
2108.049 2125.4314 L
S
n
2108.049 2125.4314 m
2112.2586 2125.7578 L
S
n
2112.2586 2125.7578 m
2116.4669 2126.0566 L
S
n
2116.4669 2126.0566 m
2120.6777 2126.3278 L
S
n
2120.6777 2126.3278 m
2124.8885 2126.5738 L
S
n
2124.8885 2126.5738 m
2129.0993 2126.797 L
S
n
2129.0993 2126.797 m
2133.3089 2126.9962 L
S
n
2133.3089 2126.9962 m
2137.5173 2127.1774 L
S
n
2137.5173 2127.1774 m
2141.7281 2127.3382 L
S
n
2141.7281 2127.3382 m
2145.9389 2127.4846 L
S
n
2145.9389 2127.4846 m
2150.1497 2127.6142 L
S
n
2150.1497 2127.6142 m
2154.3581 2127.727 L
S
n
2154.3581 2127.727 m
2158.5676 2127.829 L
S
n
2158.5676 2127.829 m
2162.7784 2127.9202 L
S
n
2162.7784 2127.9202 m
2166.9892 2127.997 L
S
n
2166.9892 2127.997 m
2171.1976 2128.063 L
S
n
2171.1976 2128.063 m
2175.4084 2128.1206 L
S
n
2175.4084 2128.1206 m
2179.618 2128.1698 L
S
n
vmrs
2179.618 2128.1698 m
2183.8288 2128.2118 L
1.7999 w
3.899994 M
S
n
2183.8288 2128.2118 m
2188.0372 2128.2442 L
S
n
2188.0372 2128.2442 m
2192.248 2128.2706 L
S
n
2192.248 2128.2706 m
2196.4588 2128.291 L
S
n
2196.4588 2128.291 m
2200.6695 2128.3066 L
S
n
2200.6695 2128.3066 m
2204.8779 2128.3174 L
S
n
2204.8779 2128.3174 m
2209.0875 2128.3222 L
S
n
2209.0875 2128.3222 m
2213.2983 2128.3222 L
S
n
2213.2983 2128.3222 m
2217.5091 2128.3174 L
S
n
2217.5091 2128.3174 m
2221.7199 2128.3114 L
S
n
2221.7199 2128.3114 m
2225.9283 2128.2994 L
S
n
2225.9283 2128.2994 m
2230.1379 2128.2862 L
S
n
2019.638 2112.943 m
2023.8488 2112.9454 L
S
n
2023.8488 2112.9454 m
2028.0572 2112.961 L
S
n
2028.0572 2112.961 m
2032.268 2112.9958 L
S
n
2032.268 2112.9958 m
2036.4788 2113.0606 L
S
n
2036.4788 2113.0606 m
2040.6883 2113.1506 L
S
n
2040.6883 2113.1506 m
2044.8991 2113.2706 L
S
n
2044.8991 2113.2706 m
2049.1075 2113.4182 L
S
n
2049.1075 2113.4182 m
2053.3183 2113.591 L
S
n
vmrs
2053.3183 2113.591 m
2057.5291 2113.7878 L
1.7999 w
3.899994 M
S
n
2057.5291 2113.7878 m
2061.7387 2114.0038 L
S
n
2061.7387 2114.0038 m
2065.9471 2114.2354 L
S
n
2065.9471 2114.2354 m
2070.1579 2114.4838 L
S
n
2070.1579 2114.4838 m
2074.3687 2114.7442 L
S
n
2074.3687 2114.7442 m
2078.5795 2115.0118 L
S
n
2078.5795 2115.0118 m
2082.7878 2115.2854 L
S
n
2082.7878 2115.2854 m
2086.9974 2115.5662 L
S
n
2086.9974 2115.5662 m
2091.2082 2115.847 L
S
n
2091.2082 2115.847 m
2095.419 2116.1278 L
S
n
2095.419 2116.1278 m
2099.6274 2116.4086 L
S
n
2099.6274 2116.4086 m
2103.8382 2116.687 L
S
n
2103.8382 2116.687 m
2108.049 2116.9606 L
S
n
2108.049 2116.9606 m
2112.2586 2117.233 L
S
n
2112.2586 2117.233 m
2116.4669 2117.4958 L
S
n
2116.4669 2117.4958 m
2120.6777 2117.755 L
S
n
2120.6777 2117.755 m
2124.8885 2118.007 L
S
n
2124.8885 2118.007 m
2129.0993 2118.2518 L
S
n
2129.0993 2118.2518 m
2133.3089 2118.4906 L
S
n
2133.3089 2118.4906 m
2137.5173 2118.721 L
S
n
vmrs
2137.5173 2118.721 m
2141.7281 2118.9442 L
1.7999 w
3.899994 M
S
n
2141.7281 2118.9442 m
2145.9389 2119.1578 L
S
n
2145.9389 2119.1578 m
2150.1497 2119.3654 L
S
n
2150.1497 2119.3654 m
2154.3581 2119.5646 L
S
n
2154.3581 2119.5646 m
2158.5676 2119.7566 L
S
n
2158.5676 2119.7566 m
2162.7784 2119.9402 L
S
n
2162.7784 2119.9402 m
2166.9892 2120.1178 L
S
n
2166.9892 2120.1178 m
2171.1976 2120.2858 L
S
n
2171.1976 2120.2858 m
2175.4084 2120.449 L
S
n
2175.4084 2120.449 m
2179.618 2120.6038 L
S
n
2179.618 2120.6038 m
2183.8288 2120.7514 L
S
n
2183.8288 2120.7514 m
2188.0372 2120.893 L
S
n
2188.0372 2120.893 m
2192.248 2121.0298 L
S
n
2192.248 2121.0298 m
2196.4588 2121.1582 L
S
n
2196.4588 2121.1582 m
2200.6695 2121.2818 L
S
n
2200.6695 2121.2818 m
2204.8779 2121.3994 L
S
n
2204.8779 2121.3994 m
2209.0875 2121.5122 L
S
n
2209.0875 2121.5122 m
2213.2983 2121.6178 L
S
n
2213.2983 2121.6178 m
2217.5091 2121.7222 L
S
n
2217.5091 2121.7222 m
2221.7199 2121.817 L
S
n
vmrs
2221.7199 2121.817 m
2225.9283 2121.9094 L
1.7999 w
3.899994 M
S
n
2225.9283 2121.9094 m
2230.1379 2121.9982 L
S
n
2019.638 2112.943 m
2023.8488 2112.943 L
S
n
2023.8488 2112.943 m
2028.0572 2112.943 L
S
n
2028.0572 2112.943 m
2032.268 2112.943 L
S
n
2032.268 2112.943 m
2036.4788 2112.9478 L
S
n
2036.4788 2112.9478 m
2040.6883 2112.9538 L
S
n
2040.6883 2112.9538 m
2044.8991 2112.967 L
S
n
2044.8991 2112.967 m
2049.1075 2112.9826 L
S
n
2049.1075 2112.9826 m
2053.3183 2113.0066 L
S
n
2053.3183 2113.0066 m
2057.5291 2113.0354 L
S
n
2057.5291 2113.0354 m
2061.7387 2113.0738 L
S
n
2061.7387 2113.0738 m
2065.9471 2113.117 L
S
n
2065.9471 2113.117 m
2070.1579 2113.1686 L
S
n
2070.1579 2113.1686 m
2074.3687 2113.2286 L
S
n
2074.3687 2113.2286 m
2078.5795 2113.297 L
S
n
2078.5795 2113.297 m
2082.7878 2113.369 L
S
n
2082.7878 2113.369 m
2086.9974 2113.4518 L
S
n
2086.9974 2113.4518 m
2091.2082 2113.537 L
S
n
2091.2082 2113.537 m
2095.419 2113.633 L
S
n
vmrs
2095.419 2113.633 m
2099.6274 2113.7302 L
1.7999 w
3.899994 M
S
n
2099.6274 2113.7302 m
2103.8382 2113.8358 L
S
n
2103.8382 2113.8358 m
2108.049 2113.9438 L
S
n
2108.049 2113.9438 m
2112.2586 2114.0566 L
S
n
2112.2586 2114.0566 m
2116.4669 2114.1742 L
S
n
2116.4669 2114.1742 m
2120.6777 2114.293 L
S
n
2120.6777 2114.293 m
2124.8885 2114.4154 L
S
n
2124.8885 2114.4154 m
2129.0993 2114.539 L
S
n
2129.0993 2114.539 m
2133.3089 2114.6674 L
S
n
2133.3089 2114.6674 m
2137.5173 2114.7934 L
S
n
2137.5173 2114.7934 m
2141.7281 2114.923 L
S
n
2141.7281 2114.923 m
2145.9389 2115.0514 L
S
n
2145.9389 2115.0514 m
2150.1497 2115.1822 L
S
n
2150.1497 2115.1822 m
2154.3581 2115.3106 L
S
n
2154.3581 2115.3106 m
2158.5676 2115.4402 L
S
n
2158.5676 2115.4402 m
2162.7784 2115.5686 L
S
n
2162.7784 2115.5686 m
2166.9892 2115.697 L
S
n
2166.9892 2115.697 m
2171.1976 2115.823 L
S
n
2171.1976 2115.823 m
2175.4084 2115.949 L
S
n
2175.4084 2115.949 m
2179.618 2116.0726 L
S
n
vmrs
2179.618 2116.0726 m
2183.8288 2116.1962 L
1.7999 w
3.899994 M
S
n
2183.8288 2116.1962 m
2188.0372 2116.3162 L
S
n
2188.0372 2116.3162 m
2192.248 2116.435 L
S
n
2192.248 2116.435 m
2196.4588 2116.555 L
S
n
2196.4588 2116.555 m
2200.6695 2116.669 L
S
n
2200.6695 2116.669 m
2204.8779 2116.7818 L
S
n
2204.8779 2116.7818 m
2209.0875 2116.8946 L
S
n
2209.0875 2116.8946 m
2213.2983 2117.0026 L
S
n
2213.2983 2117.0026 m
2217.5091 2117.1118 L
S
n
2217.5091 2117.1118 m
2221.7199 2117.215 L
S
n
2221.7199 2117.215 m
2225.9283 2117.3194 L
S
n
2225.9283 2117.3194 m
2230.1379 2117.419 L
S
n
2019.638 2112.943 m
2023.8488 2112.943 L
S
n
2023.8488 2112.943 m
2028.0572 2112.943 L
S
n
2028.0572 2112.943 m
2032.268 2112.943 L
S
n
2032.268 2112.943 m
2036.4788 2112.943 L
S
n
2036.4788 2112.943 m
2040.6883 2112.943 L
S
n
2040.6883 2112.943 m
2044.8991 2112.943 L
S
n
2044.8991 2112.943 m
2049.1075 2112.9454 L
S
n
2049.1075 2112.9454 m
2053.3183 2112.9478 L
S
n
vmrs
2053.3183 2112.9478 m
2057.5291 2112.949 L
1.7999 w
3.899994 M
S
n
2057.5291 2112.949 m
2061.7387 2112.9538 L
S
n
2061.7387 2112.9538 m
2065.9471 2112.961 L
S
n
2065.9471 2112.961 m
2070.1579 2112.9694 L
S
n
2070.1579 2112.9694 m
2074.3687 2112.9778 L
S
n
2074.3687 2112.9778 m
2078.5795 2112.991 L
S
n
2078.5795 2112.991 m
2082.7878 2113.0042 L
S
n
2082.7878 2113.0042 m
2086.9974 2113.0222 L
S
n
2086.9974 2113.0222 m
2091.2082 2113.0402 L
S
n
2091.2082 2113.0402 m
2095.419 2113.0618 L
S
n
2095.419 2113.0618 m
2099.6274 2113.087 L
S
n
2099.6274 2113.087 m
2103.8382 2113.1158 L
S
n
2103.8382 2113.1158 m
2108.049 2113.1446 L
S
n
2108.049 2113.1446 m
2112.2586 2113.177 L
S
n
2112.2586 2113.177 m
2116.4669 2113.213 L
S
n
2116.4669 2113.213 m
2120.6777 2113.2526 L
S
n
2120.6777 2113.2526 m
2124.8885 2113.2922 L
S
n
2124.8885 2113.2922 m
2129.0993 2113.3366 L
S
n
2129.0993 2113.3366 m
2133.3089 2113.3822 L
S
n
2133.3089 2113.3822 m
2137.5173 2113.429 L
S
n
vmrs
2137.5173 2113.429 m
2141.7281 2113.4806 L
1.7999 w
3.899994 M
S
n
2141.7281 2113.4806 m
2145.9389 2113.5334 L
S
n
2145.9389 2113.5334 m
2150.1497 2113.5862 L
S
n
2150.1497 2113.5862 m
2154.3581 2113.6438 L
S
n
2154.3581 2113.6438 m
2158.5676 2113.7014 L
S
n
2158.5676 2113.7014 m
2162.7784 2113.7602 L
S
n
2162.7784 2113.7602 m
2166.9892 2113.8226 L
S
n
2166.9892 2113.8226 m
2171.1976 2113.885 L
S
n
2171.1976 2113.885 m
2175.4084 2113.9486 L
S
n
2175.4084 2113.9486 m
2179.618 2114.0122 L
S
n
2179.618 2114.0122 m
2183.8288 2114.0794 L
S
n
2183.8288 2114.0794 m
2188.0372 2114.1454 L
S
n
2188.0372 2114.1454 m
2192.248 2114.2114 L
S
n
2192.248 2114.2114 m
2196.4588 2114.2798 L
S
n
2196.4588 2114.2798 m
2200.6695 2114.3482 L
S
n
2200.6695 2114.3482 m
2204.8779 2114.4166 L
S
n
2204.8779 2114.4166 m
2209.0875 2114.4862 L
S
n
2209.0875 2114.4862 m
2213.2983 2114.5546 L
S
n
2213.2983 2114.5546 m
2217.5091 2114.6254 L
S
n
2217.5091 2114.6254 m
2221.7199 2114.6938 L
S
n
vmrs
2221.7199 2114.6938 m
2225.9283 2114.7646 L
1.7999 w
3.899994 M
S
n
2225.9283 2114.7646 m
2230.1379 2114.833 L
S
n
2017.226 2247.0431 m
1995.6261 2247.0431 L
1995.6261 2234.9952 L
2017.226 2234.9952 L
2017.226 2247.0431 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1995.626068 2238.427063 m
0 0 32 0 0 (1.0) ts
}
false
[0 0 0 1]sts
Q
2184.7433 2088.8548 m
2124.7435 2088.8548 L
2124.7435 2072.0548 L
2184.7433 2072.0548 L
2184.7433 2088.8548 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2124.7435 2080.238754 m
0 0 32 0 0 (Time) ts
}
false
[0 0 0 1]sts
Q
2118.549 2193.1927 m
2058.5491 2193.1927 L
2058.5491 2176.3927 L
2118.549 2176.3927 L
2118.549 2193.1927 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2058.549149 2184.576675 m
0 0 32 0 0 (0 steps) ts
}
false
[0 0 0 1]sts
Q
1972.9503 2217.5735 m
1972.9503 2157.5737 L
1989.7502 2157.5737 L
1989.7502 2217.5735 L
1972.9503 2217.5735 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [0 11.999969 -11.999969 0 0 0] makesetfont
1981.566269 2157.573654 m
0 0 32 0 0 (Probability) ts
}
false
[0 0 0 1]sts
Q
2102.1384 2148.7872 m
2042.1385 2148.7872 L
2042.1385 2131.9873 L
2102.1384 2131.9873 L
2102.1384 2148.7872 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2042.138535 2140.171219 m
0 0 32 0 0 (1) ts
}
false
[0 0 0 1]sts
Q
2133.2264 2132.7921 m
2073.2265 2132.7921 L
2073.2265 2115.9921 L
2133.2264 2115.9921 L
2133.2264 2132.7921 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
2073.226547 2124.176056 m
0 0 32 0 0 (2) ts
}
false
[0 0 0 1]sts
Q
1714.5699 2217.5735 m
1714.5699 2157.5737 L
1731.3699 2157.5737 L
1731.3699 2217.5735 L
1714.5699 2217.5735 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [0 11.999969 -11.999969 0 0 0] makesetfont
1723.185898 2157.573654 m
0 0 32 0 0 (Probability) ts
}
false
[0 0 0 1]sts
Q
1917.2169 2088.8548 m
1857.217 2088.8548 L
1857.217 2072.0548 L
1917.2169 2072.0548 L
1917.2169 2088.8548 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [12 0 0 12 0 0] makesetfont
1857.21701 2080.238754 m
0 0 32 0 0 (Steps) ts
}
false
[0 0 0 1]sts
Q
vmr
end
%%Trailer
%%DocumentNeededResources: font Symbol
%%+ font Helvetica
%%DocumentFonts: Symbol
%%+ Helvetica
%%DocumentNeededFonts: Symbol
%%+ Helvetica
