%!PS-Adobe-2.0 EPSF-1.2
%%Title: coalesce.likecurve.vrt
%%Creator: Altsys Virtuoso 2.0
%%CreationDate: Thu Jun 18 11:01:51 PDT 1998
%%BoundingBox: 85 321 457 685
%%FHPathName:/Users/peter/Library/Images/virtuosos/coalesce.likecurve.vrt
%ALDOriginalFile:/Users/peter/Library/Images/virtuosos/coalesce.likecurve.vrt
%ALDBoundingBox: -36 -36 4032 4032 
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: font Symbol
%%+ font Helvetica
%%+ font Times-Italic
%%+ font Times-Roman
%%DocumentFonts: Symbol
%%+ Helvetica
%%+ Times-Italic
%%+ Times-Roman
%%DocumentNeededFonts: Symbol
%%+ Helvetica
%%+ Times-Italic
%%+ Times-Roman
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed {
_NXLevel2 not {
/colorimage where {
userdict eq {
/_rci false def
} if
} if
} if
} if
/md defed{
md type /dicttype eq {
/colorimage where {
md eq {
/_rci false def
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath {
4 -2 roll m
dtransform round exch round exch idtransform
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`
{
false setoverprint
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}
{GrayAngle GrayFrequency}
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div}
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div}
] def
/calcgraysteps {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}
ifelse
}
ifelse
end
}
{
currentscreen pop exch
}
ifelse
printerRes 300 max exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/nextrelease defed {
/languagelevel defed not {
/framebuffer defed {
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps {256 maxsteps min} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def
/delta -0 def
/frac -0 def
/height -0 def
/left -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/width -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat 1 add def
/inverted?
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse 
1 add
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def
{
exch dup
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll
putinterval
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{
dup 
FontDirectory exch 
known
{pop 3 -1 roll pop}
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness dup setflat fps}bdf
end%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh
%%IncludeResource: font Symbol
_efh
0 dict dup begin
end 
/f0 /Symbol FF def
_bfh
%%IncludeResource: font Helvetica
_efh
0 dict dup begin
end 
/f1 /Helvetica FF def
_bfh
%%IncludeResource: font Times-Italic
_efh
0 dict dup begin
end 
/f2 /Times-Italic FF def
_bfh
%%IncludeResource: font Times-Roman
_efh
0 dict dup begin
end 
/f3 /Times-Roman FF def
end %. AltsysDict
%%EndSetup
AltsysDict begin
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get0.3 mul
4 index 2 index get0.59 mul
4 index 3 index get0.11 mul
4 index 4 index get
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub
1.0 dup im ik add min sub
1.0 dup iy ik add min sub
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/setspotcolor {
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
/bc4 [0 0 0 0] def
/_lfp4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor
calcgraysteps mul abs round
height abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
currentflat mark
currentflat clipflatness
/delta top bottom sub numsteps1 1 add div def
/right right left sub def
/botsv top delta sub def
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat
/bottom botsv def
0 1 numsteps1
{
numsteps1 div taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def
/_lfs4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/tint2 xdf
/tint1 xdf
bcs exch 1 exch put
tint1 tint2 sub abs
bcs 1 get maxspot
calcgraysteps mul abs round
height abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
currentflat mark
currentflat clipflatness
/delta top bottom sub numsteps1 1 add div def
/right right left sub def
/botsv top delta sub def
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat
/bottom botsv def
0 1 numsteps1
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs4 {
/tint2 xdf
/tint1 xdf
bcs exch 1 exch put
/radius xdf
/yt xdf
/xt xdf
tint1 tint2 sub abs
bcs 1 get maxspot
calcgraysteps mul abs round
radius abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
radius numsteps1 div 2 div /halfstep xdf 
currentflat mark
currentflat clipflatness
{
{
dup setflat
W 
0 1 numsteps1
{
dup /radindex xdf
numsteps1 div /frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat
{
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp4 {
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/radius xdf
/yt xdf
/xt xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor
calcgraysteps mul abs round
radius abs adjnumsteps
dup 2 lt {pop 2} if
1 sub /numsteps1 xdf
radius numsteps1 div 2 div /halfstep xdf 
currentflat mark
currentflat clipflatness
{
{
dup setflat
W 
0 1 numsteps1
{
dup /radindex xdf
numsteps1 div /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat
{
newpath mark xt yt radius 1 frac sub mul halfstep add 0 360
{arc
radindex numsteps1 ne 
{
xt yt 
radindex 1 add numsteps1 
div 1 exch sub 
radius mul halfstep add
dup xt add yt moveto 
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs4{_rfs4}ndf
/rfp4{_rfp4}ndf
/ScitexVignette defed /xt xdf
xt not {/yt save def} if
/anyeq {
cvlit exch
cvlit exch
1 index type /arraytype eq 
2 index type /packedarraytype eq 
or
1 index type /arraytype eq
2 index type /packedarraytype eq
or
and {
1 index length
1 index length eq {
dup length 1 sub -1 0 {
/ind exch def
1 index ind get
1 index ind get
anyeq not {/ind -1 def exit} if
} for
pop pop
ind 0
eq
}{
pop pop false
} ifelse
}{
eq 
} ifelse
} def
/lfp4 where {
pop
/oldlfp /lfp4 load def
/lfp4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/kc2 xdf
/yc2 xdf
/mc2 xdf
/cc2 xdf
/kc1 xdf
/yc1 xdf
/mc1 xdf
/cc1 xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 1 def
/xDimension right left sub abs def
/yDimension top bottom sub abs def
/numOfColorPoints 2 def
/verticalCoord [ top bottom ] def
/horizontalCoord [ left left ] def
/colorArray [
cc1 mc1 yc1 kc1
cc2 mc2 yc2 kc2
] def
/stepVectorFunction /taperfcn load {logtaper} anyeq {[1]}{[0]}ifelse def
/smoothVG [0] def
end
W
xt yt translate ang rotate xt neg yt neg translate
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
cc1 mc1 yc1 kc1 cc2 mc2 yc2 kc2 
/taperfcn load left bottom right top ang xt yt oldlfp
/EndGradation where {pop EndGradation} if
} if
}bdf
} if 
/lfs4 where {
pop
/oldlfs /lfs4 load def
/lfs4 {
/yt xdf
/xt xdf
/ang xdf
storerect
/taperfcn xdf
/tint2 xdf
/tint1 xdf
/spotNum xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 1 def
/xDimension right left sub abs def
/yDimension top bottom sub abs def
/numOfColorPoints 2 def
/verticalCoord [ top bottom ] def
/horizontalCoord [ left left ] def
/colorArray [
tint2 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
tint1 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
] def
/stepVectorFunction /taperfcn load {logtaper} anyeq {[1]}{[0]}ifelse def
/smoothVG [0] def
end
W
xt yt translate ang rotate xt neg yt neg translate
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
spotNum tint1 tint2
/taperfcn load left bottom right top ang xt yt oldlfs
/EndGradation where {pop EndGradation} if
} if
}bdf
} if 
/rfp4 where {
pop
/oldrfp /rfp4 load def
/rfp4 {
/kc2 xdf
/yc2 xdf
/mc2 xdf
/cc2 xdf
/kc1 xdf
/yc1 xdf
/mc1 xdf
/cc1 xdf
/radius xdf
/yt xdf
/xt xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 3 def
/xDimension radius 2 mul def
/yDimension radius 2 mul def
/numOfColorPoints 2 def
/verticalCoord [ yt yt ] def
/horizontalCoord [ xt dup radius add ] def
/colorArray [
cc2 mc2 yc2 kc2
cc1 mc1 yc1 kc1
] def
/stepVectorFunction [0] def
/smoothVG [0] def
end
W
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
xt yt radius cc1 mc1 yc1 kc1 cc2 mc2 yc2 kc2 oldrfp
/EndGradation where {pop EndGradation} if
} if
} bdf
} if 
/rfs4 where {
pop
/oldrfs /rfs4 load def
/rfs4 {
/tint2 xdf
/tint1 xdf
/spotNum xdf
/radius xdf
/yt xdf
/xt xdf
save
20 dict dup begin
/VGVersion 0 def
/typeOfVign 3 def
/xDimension radius 2 mul def
/yDimension radius 2 mul def
/numOfColorPoints 2 def
/verticalCoord [ yt yt ] def
/horizontalCoord [ xt dup radius add ] def
/colorArray [
tint2 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
tint1 spots spotNum
get aload pop pop pop 4{4 index mul 4 1 roll}repeat
5 -1 roll pop
] def
/stepVectorFunction [0] def
/smoothVG [0] def
end
W
ScitexVignette
exch
restore
not {
/BeginGradation where {pop BeginGradation} if
xt yt radius spotNum tint1 tint2 oldrfs
/EndGradation where {pop EndGradation} if
} if
} bdf
} if 
xt not {yt restore} if
/cvc [0 0 0 1] def
/vc{
AltsysDict /cvc 2 index put
aload length 4 eq
{setcmykcolor}
{setspotcolor}
ifelse
}bdf
/origmtx matrix currentmatrix def
/ImMatrix matrix currentmatrix def
0 setseparationgray
/imgr {-36 -36 4032 4032 } def
/bleed 0 def
/clpr {-36 -36 3852 3852 } def
/xs 1 def
/ys 1 def
/botx 0 def
/overlap 0 def
/wdist 18 def
0 2 mul fhsetspreadsize
0 0 ne {/df 0 def /clipflatness 0 def} if
/maxsteps 256 def
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index 
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth vc newpath
/ts{{false charpath stroke}ta}def exec 
xt setlinewidth}bdf
/strk{/textopf currentoverprint def vc setoverprint
/ts{{false charpath stroke}ta}def exec 
textopf setoverprint
}bdf
userdict begin /supdict 65 dict def end 
supdict begin 
/str1 512 string def 
/dx 500 def 
/dy 700 def 
/cnt 0 def 
/newinside { 
{flattenpath}fp clipper 
pathbbox
1 index 4 index sub round cvi /dx xdf
0 index 3 index sub round cvi /dy xdf
pop pop translate 
222 srand 
newpath 
} bind def
/randint { 
rand exch mod } def
/rand8 { rand -16 bitshift 255 and} def
/rand2 
{ rand -16 bitshift 3 and } def
/brandxy {
dx randint dy randint } def
/x1 
{ angle cos abs dx mul } def
/x2 
{ 90 angle sub cos abs dy mul } def 
/y1 
{ angle sin abs dx mul } def
/y2 
{ 90 angle sub sin abs dy mul } def
/backgnd 
{ xstart ystart m
xstart ystart abs L
xstart abs ystart abs L
xstart abs ystart L
closepath fill } def 
/incrcnt 
{ /cnt cnt 1 add def } def
/colorchoice
{
/found false def 
gray? 
{/CCblack [0 0 0 0] def
color 1 exch sub
CCblack 3 3 -1 roll put
CCblack vc} 
{color length 2 eq
{color 1 get type (text) type eq 
{0 1 spots length 1 sub
{/cnt xdf 
spots cnt get 4 get color 1 get eq 
{/found true def exit} if 
} for
found {color 1 cnt put} {color 1 3 put} ifelse
} if 
color vc 
} if 
color length 4 eq {color vc} if 
} ifelse 
} def
/gray? 
{ color type 0 type eq color type .0 type eq or } def 
end 
supdict begin
/dashpat [12 3] def 
/lineloop 
{ ystart spacing ystart abs
{ /ycur xdf 
dashes? 
{ 
cnt 1 and 0 eq { dashpat 0 setdash } 
{ dashpat dashpat 0 get dashpat 1 get add 2 div setdash } 
ifelse } if
xstart ycur m
xstart abs ycur L
stroke incrcnt
} for } def
end 
/newhatch 
{
supdict begin 
q newinside
/dashes? xdf 
/color xdf
colorchoice 
w
/spacing xdf 
/ang2 xdf 
/angle xdf 
/xstart {x1 x2 add 2 div neg} bdf 
/ystart {y1 y2 add 2 div neg} bdf 
dx 2 div dy 2 div translate
q angle rotate
lineloop Q 
ang2 angle sub abs 180 ne 
{
ang2 rotate 
/angle ang2 def 
lineloop 
} if
Q end
} def 
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
137.1979 551.6793 m
88.8229 551.6793 L
88.8229 528.0543 L
137.1979 528.0543 L
137.1979 551.6793 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [18 0 0 18 0 0] makesetfont
88.822937 538.755249 m
0 0 32 0 0 (ln\(L\)) ts
}
true
[0 0 0 1]sts
Q
318.9417 343.1961 m
295.3167 343.1961 L
295.3167 321.8211 L
318.9417 321.8211 L
318.9417 343.1961 L
n
q
_bfh
%%IncludeResource: font Symbol
_efh
{
f0 [18 0 0 18 0 0] makesetfont
295.316742 329.69606 m
0 0 32 0 0 (Q) ts
}
true
[0 0 0 1]sts
Q
193.0127 367.4344 m
153.6377 367.4344 L
153.6377 349.4344 L
193.0127 349.4344 L
193.0127 367.4344 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
153.637695 356.125824 m
0 0 32 0 0 (0.02) ts
}
true
[0 0 0 1]sts
Q
322.0635 367.4344 m
282.6885 367.4344 L
282.6885 349.4344 L
322.0635 349.4344 L
322.0635 367.4344 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
282.688507 356.125824 m
0 0 32 0 0 (0.04) ts
}
true
[0 0 0 1]sts
Q
454.0711 367.4344 m
414.6961 367.4344 L
414.6961 349.4344 L
454.0711 349.4344 L
454.0711 367.4344 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
414.69606 356.125824 m
0 0 32 0 0 (0.06) ts
}
true
[0 0 0 1]sts
Q
158.5527 483.4838 m
119.1777 483.4838 L
119.1777 465.4838 L
158.5527 465.4838 L
158.5527 483.4838 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
127.036911 472.175262 m
0 0 32 0 0 (- 4.0) ts
}
true
[0 0 0 1]sts
Q
158.5527 582.1502 m
119.1777 582.1502 L
119.1777 564.1502 L
158.5527 564.1502 L
158.5527 582.1502 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
127.036911 570.841644 m
0 0 32 0 0 (- 2.0) ts
}
true
[0 0 0 1]sts
Q
158.5527 680.8166 m
119.1777 680.8166 L
119.1777 662.8166 L
158.5527 662.8166 L
158.5527 680.8166 L
n
q
_bfh
%%IncludeResource: font Helvetica
_efh
{
f1 [15.75 0 0 15.75 0 0] makesetfont
136.660156 669.508041 m
0 0 32 0 0 (0.0) ts
}
true
[0 0 0 1]sts
Q
162.8952 673.7874 m
171.3121 673.7874 L
0.2812 w
3.899994 M
false setoverprint
S
n
167.8982 377.0269 m
164.0963 377.0269 L
0.9567 w
S
n
167.8982 476.9612 m
164.0963 476.9612 L
S
n
167.8982 575.3954 m
164.0963 575.3954 L
S
n
167.8982 673.8296 m
164.0963 673.8296 L
S
n
168.0798 375.0706 m
168.0798 673.7881 L
435.6562 673.7881 L
S
n
168.0434 677.6913 m
168.0434 673.8894 L
S
n
233.7935 677.6913 m
233.7935 673.8894 L
S
n
299.5437 677.6913 m
299.5437 673.8894 L
S
n
365.2938 677.6913 m
365.2938 673.8894 L
S
n
431.0439 677.6913 m
431.0439 673.8894 L
S
n
168.0796 376.377 m
435.6559 376.377 L
S
n
vmrs
168.0431 372.4738 m
168.0431 376.2757 L
0.9567 w
3.899994 M
S
n
233.7933 372.4738 m
233.7933 376.2757 L
S
n
299.5434 372.4738 m
299.5434 376.2757 L
S
n
365.2935 372.4738 m
365.2935 376.2757 L
S
n
431.0437 372.4738 m
431.0437 376.2757 L
S
n
167.0996 580.1112 m
435.7274 580.1112 L
1.2756 w
[2 2 ] 0 d
S
[] 0 d
n
294.8699 674.0019 m
294.8699 376.2519 L
[2 2 ] 0 d
S
[] 0 d
n
221.8123 579.999 m
221.8123 376.2519 L
[2 2 ] 0 d
S
[] 0 d
n
411.7962 580.1112 m
411.7962 376.2518 L
[2 2 ] 0 d
S
[] 0 d
n
true eomode
411.7962 580.1112 m
411.7962 580.1112 428.2733 555.8506 436.5827 542.8219 C
436.5827 542.8219 L
436.5827 376.377 L
410.3699 376.377 L
411.7962 580.1112 L
h
q
 45.000000 45.000000 2.834595 0.283493 [0 0 0 1] false newhatch Q
n
295.7813 663.4213 m
295.7813 589.9213 L
2.1259 w
false setoverprint
S
n
295.7813 663.4213 m
291.5924 660.6287 L
295.7813 671.7991 L
299.9702 660.6287 L
295.7813 663.4213 L
f
n
295.7813 589.9213 m
299.9702 592.7138 L
295.7813 581.5435 L
291.5924 592.7138 L
295.7813 589.9213 L
f
n
407.8219 633.8126 m
322.7826 633.8126 L
322.7826 582.7891 L
407.8219 582.7891 L
407.8219 633.8126 L
n
q
_bfh
%%IncludeResource: font Symbol
_efh
{
f0 [22.5 0 0 22.5 0 0] makesetfont
322.782562 616.937622 m
0 0 32 0 0 ( c) ts
}
true
[0 0 0 1]sts
{
f0 [13.5 0 0 13.5 0 0] makesetfont
0 8.503952 rmoveto 0 0 32 -5.399918 0 (2) ts
0 -8.503952 rmoveto }
true
[0 0 0 1]sts
_bfh
%%IncludeResource: font Times-Italic
_efh
{
f2 [13.5 0 0 13.5 0 0] makesetfont
0 -12.755859 rmoveto 0 0 32 0 0 (df) ts
0 12.755859 rmoveto }
true
[0 0 0 1]sts
_bfh
%%IncludeResource: font Times-Roman
_efh
{
f3 [13.5 0 0 13.5 0 0] makesetfont
0 -12.755859 rmoveto 0 0 32 0 0 (,) ts
0 12.755859 rmoveto }
true
[0 0 0 1]sts
_bfh
%%IncludeResource: font Symbol
_efh
{
f0 [13.5 0 0 13.5 0 0] makesetfont
0 -12.755859 rmoveto 0 0 32 0 0 (a) ts
0 12.755859 rmoveto }
true
[0 0 0 1]sts
Q
322.5627 635.9267 m
314.0587 635.9267 L
314.0587 599.7849 L
322.5627 599.7849 L
322.5627 635.9267 L
n
q
_bfh
%%IncludeResource: font Symbol
_efh
{
f0 [15 0 0 15 0 0] makesetfont
314.058746 624.676666 m
0 0 32 0 0 (1) ts
}
true
[0 0 0 1]sts
{
f0 [15 0 0 15 0 0] makesetfont
314.058746 605.176666 m
0 0 32 0 0 (2) ts
}
true
[0 0 0 1]sts
Q
308.3423 619.9328 m
325.4914 619.9328 L
0.8503 w
false setoverprint
S
n
false eomode
184.7971 376.4476 m
189.943 423.0018 196.2117 467.3168 205.7558 514.1911 C
210.7716 538.8253 216.051 560.8143 221.77 580.0142 C
220.6199 376.2519 L
183.3602 376.2518 L
184.7971 376.4476 L
h
q
 45.000000 45.000000 2.834595 0.283493 [0 0 0 1] false newhatch Q
n
184.7634 376.4476 m
189.9146 423.0018 196.2117 467.3168 205.7558 514.1911 C
227.3421 620.2083 253.8119 677.2327 299.1768 673.7881 C
344.5418 670.3436 390.4489 615.1573 436.5827 542.8219 C
1.5945 w
false setoverprint
S
n
vmr
end
%%Trailer
%%DocumentNeededResources: font Symbol
%%+ font Helvetica
%%+ font Times-Italic
%%+ font Times-Roman
%%DocumentFonts: Symbol
%%+ Helvetica
%%+ Times-Italic
%%+ Times-Roman
%%DocumentNeededFonts: Symbol
%%+ Helvetica
%%+ Times-Italic
%%+ Times-Roman
